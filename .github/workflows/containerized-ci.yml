# This workflow has been merged with ci.yml
# Kept for backward compatibility but might be removed in the future

name: Containerized CI (Legacy)

on:
  workflow_dispatch:  # Only run manually now
 
permissions:
  contents: read

jobs:
  containerized-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        wp-version: [latest, '6.4', '6.3', '6.2']
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Setup dependency caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.composer/cache
          node_modules
          vendor
        key: ${{ runner.os }}-deps-${{ hashFiles('**/composer.lock', '**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-deps-

    - name: Make entrypoint script executable
      run: chmod +x docker-entrypoint.sh bin/run-tests.sh

    - name: Create logs and test-results directories
      run: mkdir -p logs test-results && chmod -R 777 logs test-results

    - name: Build and run tests
      run: |
        # Build the Docker image
        docker compose build

        # Run the tests with Docker Compose
        WP_VERSION=${{ matrix.wp-version }} docker compose up --abort-on-container-exit
      env:
        WP_VERSION: ${{ matrix.wp-version }}

    - name: Check test results
      id: check-results
      run: |
        if [ -f logs/composer-test-failed.log ] || [ -f logs/npm-test-failed.log ]; then
          echo "Tests failed. Check logs for details."
          echo "tests_failed=true" >> $GITHUB_OUTPUT
        else
          echo "All tests passed successfully!"
          echo "tests_failed=false" >> $GITHUB_OUTPUT
        fi

    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs-wp-${{ matrix.wp-version }}
        path: |
          ./logs
          ./test-results
        retention-days: 14

    - name: Display test result summary
      if: always()
      run: |
        echo "=== PHP Test Results ==="
        if [ -f logs/composer-test.log ]; then
          cat logs/composer-test.log
        else
          echo "No PHP test logs found"
        fi
        
        echo "=== JavaScript Test Results ==="
        if [ -f logs/npm-test.log ]; then
          cat logs/npm-test.log
        else
          echo "No JavaScript test logs found"
        fi

    - name: Fail the workflow if tests failed
      if: steps.check-results.outputs.tests_failed == 'true'
      run: exit 1
