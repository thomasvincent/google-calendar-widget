name: Release

on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create Release Dockerfile
        run: |
          cat > Dockerfile.release << 'EOF'
          FROM php:8.0-cli

          # Install system dependencies
          RUN apt-get update && apt-get install -y \
              git \
              unzip \
              libzip-dev \
              libxml2-dev \
              nodejs \
              npm \
              zip \
              && docker-php-ext-install zip pdo_mysql mysqli intl

          # Install Composer
          COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

          # Set working directory
          WORKDIR /var/www/html

          # Create a non-root user
          RUN useradd -m wordpress && \
              chown -R wordpress:wordpress /var/www/html

          # Copy project files
          COPY --chown=wordpress:wordpress . .

          # Switch to non-root user
          USER wordpress

          # Install PHP dependencies
          RUN composer install --no-dev --prefer-dist --no-progress

          # Install Node.js dependencies
          RUN npm install

          # Run tests
          RUN npm test || echo "JavaScript tests failed, but continuing" && \
              composer test || echo "PHP tests failed, but continuing"

          # Build plugin
          RUN mkdir -p build/google-calendar-widget && \
              cp -r *.php *.txt *.md languages examples build/google-calendar-widget/ || true && \
              cp -r assets includes build/google-calendar-widget/ || true && \
              cd build && \
              zip -r google-calendar-widget.zip google-calendar-widget

          # Command to keep container running for artifact extraction
          CMD ["tail", "-f", "/dev/null"]
          EOF

      - name: Build and run release container
        run: |
          docker build -t wordpress-release -f Dockerfile.release .
          docker run -d --name release-container wordpress-release
          docker cp release-container:/var/www/html/build/google-calendar-widget.zip ./google-calendar-widget.zip

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false
          files: |
            ./google-calendar-widget.zip
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
